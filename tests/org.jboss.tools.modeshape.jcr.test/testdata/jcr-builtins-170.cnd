/*
 * ModeShape (http://www.modeshape.org)
 * See the COPYRIGHT.txt file distributed with this work for information
 * regarding copyright ownership.  Some portions may be licensed
 * to Red Hat, Inc. under one or more contributor license agreements.
 * See the AUTHORS.txt file in the distribution for a full listing of 
 * individual contributors. 
 *
 * ModeShape is free software. Unless otherwise indicated, all code in ModeShape
 * is licensed to you under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * ModeShape is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */

<rep='internal'>
<jcr='http://www.jcp.org/jcr/1.0'>
<nt='http://www.jcp.org/jcr/nt/1.0'>

//------------------------------------------------------------------------------
// B A S E  T Y P E S
//------------------------------------------------------------------------------

[nt:base]
  - jcr:primaryType (name) mandatory autocreated protected compute
  - jcr:mixinTypes (name) protected multiple compute

[nt:unstructured]
  orderable
  - * (undefined) multiple
  - * (undefined)
  + * (nt:base) = nt:unstructured multiple version

[mix:referenceable]
  mixin
  - jcr:uuid (string) mandatory autocreated protected initialize

[mix:lockable] > mix:referenceable
  mixin
  - jcr:lockOwner (string) protected ignore
  - jcr:lockIsDeep (boolean) protected ignore

//------------------------------------------------------------------------------
// V E R S I O N I N G
//------------------------------------------------------------------------------

[mix:versionable] > mix:referenceable
  mixin
  - jcr:versionHistory (reference) mandatory protected
    < 'nt:versionHistory'
  - jcr:baseVersion (reference) mandatory protected ignore
    < 'nt:version'
  - jcr:isCheckedOut (boolean) = 'true' mandatory autocreated protected ignore
  - jcr:predecessors (reference) mandatory protected multiple
    < 'nt:version'
  - jcr:mergeFailed (reference) protected multiple abort

[nt:versionHistory] > mix:referenceable
  - jcr:versionableUuid (string) mandatory autocreated protected abort
  + jcr:rootVersion (nt:version) = nt:version mandatory autocreated protected abort
  + jcr:versionLabels (nt:versionLabels) = nt:versionLabels mandatory autocreated protected abort
  + * (nt:version) = nt:version protected abort

[nt:versionLabels]
  - * (reference) protected abort
    < 'nt:version'

[nt:version] > mix:referenceable
  - jcr:created (date) mandatory autocreated protected abort
  - jcr:predecessors (reference) protected multiple abort
    < 'nt:version'
  - jcr:successors (reference) protected multiple abort
    < 'nt:version'
  + jcr:frozenNode (nt:frozenNode) protected abort

[nt:frozenNode] > mix:referenceable
  orderable
  - jcr:frozenPrimaryType (name) mandatory autocreated protected abort
  - jcr:frozenMixinTypes (name) protected multiple abort
  - jcr:frozenUuid (string) mandatory autocreated protected abort
  - * (undefined) protected abort
  - * (undefined) protected multiple abort
  + * (nt:base) protected multiple abort

[nt:versionedChild]
  - jcr:childVersionHistory (reference) mandatory autocreated protected abort
    < 'nt:versionHistory'

//------------------------------------------------------------------------------
// N O D E T Y P E S
//------------------------------------------------------------------------------

[nt:nodeType]
  - jcr:nodeTypeName (name) mandatory
  - jcr:supertypes (name) multiple
  - jcr:isMixin (boolean) mandatory
  - jcr:hasOrderableChildNodes (boolean) mandatory
  - jcr:primaryItemName (name)
  + jcr:propertyDefinition (nt:propertyDefinition) = nt:propertyDefinition multiple version
  + jcr:childNodeDefinition (nt:childNodeDefinition) = nt:childNodeDefinition multiple version

[nt:propertyDefinition]
  - jcr:name (name)
  - jcr:autoCreated (boolean) mandatory
  - jcr:mandatory (boolean) mandatory
  - jcr:onParentVersion (string) mandatory
    < 'COPY', 'VERSION', 'INITIALIZE', 'COMPUTE', 'IGNORE', 'ABORT'
  - jcr:protected (boolean) mandatory
  - jcr:requiredType (string) mandatory
    < 'STRING', 'BINARY', 'LONG', 'DOUBLE', 'BOOLEAN', 'DATE', 'NAME', 'PATH', 'REFERENCE', 'UNDEFINED'
  - jcr:valueConstraints (string) multiple
  - jcr:defaultValues (undefined) multiple
  - jcr:multiple (boolean) mandatory

[nt:childNodeDefinition]
  - jcr:name (name)
  - jcr:autoCreated (boolean) mandatory
  - jcr:mandatory (boolean) mandatory
  - jcr:onParentVersion (string) mandatory
    < 'COPY', 'VERSION', 'INITIALIZE', 'COMPUTE', 'IGNORE', 'ABORT'
  - jcr:protected (boolean) mandatory
  - jcr:requiredPrimaryTypes (name) = 'nt:base' mandatory multiple
  - jcr:defaultPrimaryType (name)
  - jcr:sameNameSiblings (boolean) mandatory

//------------------------------------------------------------------------------
// M I S C
//------------------------------------------------------------------------------

[nt:hierarchyNode]
  - jcr:created (date) autocreated protected initialize

[nt:folder] > nt:hierarchyNode
  + * (nt:hierarchyNode) version

[nt:file] > nt:hierarchyNode
  + jcr:content (nt:base) primary mandatory

[nt:linkedFile] > nt:hierarchyNode
  - jcr:content (reference) primary mandatory

[nt:resource] > mix:referenceable
  - jcr:encoding (string)
  - jcr:mimeType (string) mandatory
  - jcr:data (binary) primary mandatory
  - jcr:lastModified (date) mandatory ignore

[nt:query]
  - jcr:statement (string)
  - jcr:language (string)

//------------------------------------------------------------------------------
// J A C K R A B B I T   I N T E R N A L S
//------------------------------------------------------------------------------

[rep:nodeTypes]
  + * (nt:nodeType) = nt:nodeType protected abort

[rep:root] > nt:unstructured
  orderable
  + jcr:system (rep:system) = rep:system mandatory ignore

[rep:system]
  orderable
  + jcr:versionStorage (rep:versionStorage) = rep:versionStorage mandatory protected abort
  + jcr:nodeTypes (rep:nodeTypes) = rep:nodeTypes mandatory protected abort
  + * (nt:base) = nt:unstructured multiple ignore

[rep:versionStorage]
  + * (nt:versionHistory) = nt:versionHistory protected multiple abort
  + * (rep:versionStorage) = rep:versionStorage protected multiple abort